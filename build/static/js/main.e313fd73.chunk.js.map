{"version":3,"sources":["components/Header.tsx","components/UserSelector.tsx","config.ts","components/ReasonSelector.tsx","js/dom-utils.js","js/util.js","js/pdf-util.js","certificate.pdf","components/Form.tsx","components/LegalMentions.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","UserSelector","currentUser","users","onChange","id","name","value","Object","keys","map","user","key","upcaseUser","charAt","toUpperCase","slice","profile","emoji","config","reasonsList","travail","title","famille","achats","sport_animaux","sante","handicap","convocation","missions","enfants","ReasonSelector","currentReason","reasons","reason","includes","type","checked","htmlFor","plainAttributes","downloadBlob","blob","fileName","link","tag","attrs","el","document","createElement","forEach","plainAttr","setAttribute","assign","url","URL","createObjectURL","href","download","body","appendChild","click","generateQR","text","QRCode","toDataURL","errorCorrectionLevel","quality","margin","ys","generatePdf","pdfBase","a","creationInstant","Date","creationDate","toLocaleDateString","creationHour","toLocaleTimeString","hour","minute","replace","lastname","firstname","birthday","placeofbirth","address","zipcode","city","datesortie","heuresortie","data","join","fetch","then","res","arrayBuffer","existingPdfBytes","PDFDocument","load","pdfDoc","setTitle","setSubject","setKeywords","setProducer","setCreator","setAuthor","page1","getPages","embedFont","StandardFonts","Helvetica","font","drawText","x","y","size","split","locationSize","getIdealFontSize","alert","qrTitle1","qrTitle2","generatedQR","embedPng","qrImage","lineHeight","color","rgb","drawImage","getWidth","width","height","addPage","page2","getHeight","save","pdfBytes","Blob","maxWidth","minSize","defaultSize","currentSize","textWidth","widthOfTextAtSize","Form","generate","userData","userProfile","now","getDate","getMonth","getFullYear","getHours","String","getMinutes","padStart","pdfBlob","React","useState","setUser","error","setError","setReason","setUserData","userConfig","setUserConfig","useEffect","settings","defaultChoice","choices","location","search","defaultUser","axios","get","origin","pathname","response","catch","console","fetchData","e","target","currentTarget","onClick","LegalMentions","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e313fd73.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <h1 className=\"text-center mb-4\">Générateur d'autorisation <span className=\"badge badge-warning\">COVID-19</span></h1>\n)\n\nexport default Header;\n","import React, { FC } from 'react';\nimport { UsersType } from '../config/types';\n\ninterface UserSelectorProps {\n  currentUser: string;\n  users: UsersType;\n  onChange?: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n}\n\nconst UserSelector: FC<UserSelectorProps> = ({\n  currentUser = '',\n  users = {},\n  onChange,\n}: UserSelectorProps) => {\n  return (\n    <h2 className=\"mb-4\">Je suis\n      <select id=\"user\" name=\"user\"\n        className=\"custom-select custom-select-lg\" value={currentUser}\n        onChange={onChange}>\n        <option value=\"\">...</option>\n        {\n          Object.keys(users).map((user, key) => {\n            const upcaseUser = user.charAt(0).toUpperCase() + user.slice(1);\n            return (\n              <option key={user} value={user}>{upcaseUser}\n                {\n                  (users && users[user] && users[user].profile && users[user].profile.emoji)\n                    ? users[user].profile.emoji\n                    : null\n                }\n              </option>\n            );\n          })\n        }\n      </select>\n    </h2>\n  );\n}\n\nexport default UserSelector;\n","import { ConfigType } from './config/types';\n\nconst config: ConfigType = {\n  reasonsList: {\n    travail: {\n      title: 'au boulot',\n      emoji: '🖥',\n    },\n    famille: {\n      title: 'chez la nounou',\n      emoji: '👶🏼',\n    },\n    achats: {\n      title: 'faire les courses',\n      emoji: '🛒',\n    },\n    sport_animaux: {\n      title: \"prendre l'air\",\n      emoji: ' ☔️',\n    },\n    sante: {\n      title: 'chez le doc (glups)',\n      emoji: '🤒',\n    },\n    handicap: {\n      title: 'me déplacer en situation de handicap',\n      emoji: '🦽',\n    },\n    convocation: {\n      title: 'à une convocation',\n      emoji: '📄',\n    },\n    missions: {\n      title: \"participer à une mission d'intérêt général\",\n      emoji: '🔧',\n    },\n    enfants: {\n      title: \"chercher les enfants à l'école\",\n      emoji: '🧸',\n    },\n  },\n};\n\nexport default config;\n","import React, { FC } from 'react';\nimport config from '../config';\n\ninterface ReasonSelectorProps {\n  currentReason: string;\n  reasons: string[] | null;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst ReasonSelector: FC<ReasonSelectorProps> = ({\n  currentReason,\n  onChange,\n  reasons,\n}: ReasonSelectorProps) => {\n  return (\n    <div>\n      <h2>Je vais ...</h2>\n      <div className=\"custom-control custom-radio\">\n        {\n          Object.keys(config.reasonsList).map((reason) => {\n            if((reasons && reasons?.includes(reason)) || reasons == null) {\n              return (\n                <p key={reason} id={`reason-${reason}`}\n                  className=\"choice mt-3 mb-3\">\n                  <input type=\"radio\" name=\"field-reason\"\n                    id={reason} value={reason}\n                    className=\"custom-control-input\" checked={ currentReason === reason}\n                    onChange={onChange} />\n                  <label htmlFor={reason} className=\"custom-control-label\">{config.reasonsList[reason as keyof typeof config.reasonsList]?.title} {config.reasonsList[reason as keyof typeof config.reasonsList]?.emoji}</label>\n                </p>\n              );\n            } else {\n              return null;\n            }\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default ReasonSelector;\n","export const $ = (...args) => document.querySelector(...args)\nexport const $$ = (...args) => [...document.querySelectorAll(...args)]\n\nconst plainAttributes = [\n  'for',\n  'inputmode',\n  'minlength',\n  'maxlength',\n  'min',\n  'max',\n  'pattern',\n]\n\nexport const createElement = (tag, attrs) => {\n  const el = document.createElement(tag)\n  plainAttributes.forEach(plainAttr => {\n    if (attrs && plainAttr in attrs && attrs[plainAttr]) {\n      el.setAttribute(plainAttr, attrs[plainAttr])\n    }\n    if (attrs) {\n      delete attrs[plainAttr]\n    }\n  })\n  Object.assign(el, attrs)\n  return el\n}\n\nexport const appendTo = el => domNodes => {\n  if (domNodes[Symbol.iterator]) {\n    el.append(...domNodes)\n    return\n  }\n  el.append(domNodes)\n}\n\nexport function downloadBlob (blob, fileName) {\n  const link = createElement('a')\n  const url = URL.createObjectURL(blob)\n  link.href = url\n  link.download = fileName\n  document.body.appendChild(link)\n  link.click()\n}\n","import QRCode from 'qrcode'\n\nexport function generateQR (text) {\n  const opts = {\n    errorCorrectionLevel: 'M',\n    type: 'image/png',\n    quality: 0.92,\n    margin: 1,\n  }\n  return QRCode.toDataURL(text, opts)\n}\n\nexport function pad2Zero (str) {\n  return String(str).padStart(2, '0')\n}\n\nexport function getFormattedDate (date) {\n  const year = date.getFullYear()\n  const month = pad2Zero(date.getMonth() + 1) // Les mois commencent à 0\n  const day = pad2Zero(date.getDate())\n  return `${year}-${month}-${day}`\n}\n\nexport function addSlash (str) {\n  return str\n    .replace(/^(\\d{2})$/g, '$1/')\n    .replace(/^(\\d{2})\\/(\\d{2})$/g, '$1/$2/')\n    .replace(/\\/\\//g, '/')\n}\n\nexport function addVersion (version) {\n  document.getElementById(\n    'version',\n  ).innerHTML = `${new Date().getFullYear()} - ${version}`\n}\n","import { generateQR } from './util'\nimport { PDFDocument, rgb, StandardFonts } from 'pdf-lib'\n\nconst ys = {\n  travail: 488,\n  achats: 417,\n  sante: 347,\n  famille: 325,\n  handicap: 291,\n  sport_animaux: 269,\n  convocation: 199,\n  missions: 178,\n  enfants: 157,\n}\n\nexport async function generatePdf (profile, reasons, pdfBase) {\n  const creationInstant = new Date()\n  const creationDate = creationInstant.toLocaleDateString('fr-FR')\n  const creationHour = creationInstant\n    .toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })\n    .replace(':', 'h')\n\n  const {\n    lastname,\n    firstname,\n    birthday,\n    placeofbirth,\n    address,\n    zipcode,\n    city,\n    datesortie,\n    heuresortie,\n  } = profile\n\n  const data = [\n    `Cree le: ${creationDate} a ${creationHour}`,\n    `Nom: ${lastname}`,\n    `Prenom: ${firstname}`,\n    `Naissance: ${birthday} a ${placeofbirth}`,\n    `Adresse: ${address} ${zipcode} ${city}`,\n    `Sortie: ${datesortie} a ${heuresortie}`,\n    `Motifs: ${reasons}`,\n    '', // Pour ajouter un ; aussi au dernier élément\n  ].join(';\\n')\n\n  const existingPdfBytes = await fetch(pdfBase).then((res) => res.arrayBuffer())\n\n  const pdfDoc = await PDFDocument.load(existingPdfBytes)\n\n  // set pdf metadata\n  pdfDoc.setTitle('COVID-19 - Déclaration de déplacement')\n  pdfDoc.setSubject('Attestation de déplacement dérogatoire')\n  pdfDoc.setKeywords([\n    'covid19',\n    'covid-19',\n    'attestation',\n    'déclaration',\n    'déplacement',\n    'officielle',\n    'gouvernement',\n  ])\n  pdfDoc.setProducer('DNUM/SDIT')\n  pdfDoc.setCreator('')\n  pdfDoc.setAuthor(\"Ministère de l'intérieur\")\n\n  const page1 = pdfDoc.getPages()[0]\n\n  const font = await pdfDoc.embedFont(StandardFonts.Helvetica)\n  const drawText = (text, x, y, size = 11) => {\n    page1.drawText(text, { x, y, size, font })\n  }\n\n  drawText(`${firstname} ${lastname}`, 107, 657)\n  drawText(birthday, 107, 627)\n  drawText(placeofbirth, 240, 627)\n  drawText(`${address} ${zipcode} ${city}`, 124, 596)\n\n  reasons\n    .split(', ')\n    .forEach(reason => {\n      drawText('x', 59, ys[reason], 12)\n    })\n\n  let locationSize = getIdealFontSize(font, profile.city, 83, 7, 11)\n\n  if (!locationSize) {\n    alert(\n      'Le nom de la ville risque de ne pas être affiché correctement en raison de sa longueur. ' +\n        'Essayez d\\'utiliser des abréviations (\"Saint\" en \"St.\" par exemple) quand cela est possible.',\n    )\n    locationSize = 7\n  }\n\n  drawText(profile.city, 93, 122, locationSize)\n  drawText(`${profile.datesortie}`, 76, 92, 11)\n  drawText(`${profile.heuresortie}`, 246, 92, 11)\n\n  // const shortCreationDate = `${creationDate.split('/')[0]}/${\n  //   creationDate.split('/')[1]\n  // }`\n  // drawText(shortCreationDate, 314, 189, locationSize)\n\n  // // Date création\n  // drawText('Date de création:', 479, 130, 6)\n  // drawText(`${creationDate} à ${creationHour}`, 470, 124, 6)\n\n  const qrTitle1 = 'QR-code contenant les informations '\n  const qrTitle2 = 'de votre attestation numérique'\n\n  const generatedQR = await generateQR(data)\n\n  const qrImage = await pdfDoc.embedPng(generatedQR)\n\n  page1.drawText(qrTitle1 + '\\n' + qrTitle2, { x: 415, y: 135, size: 9, font, lineHeight: 10, color: rgb(1, 1, 1) })\n\n  page1.drawImage(qrImage, {\n    x: page1.getWidth() - 156,\n    y: 25,\n    width: 92,\n    height: 92,\n  })\n\n  pdfDoc.addPage()\n  const page2 = pdfDoc.getPages()[1]\n  page2.drawText(qrTitle1 + qrTitle2, { x: 50, y: page2.getHeight() - 70, size: 11, font, color: rgb(1, 1, 1) })\n  page2.drawImage(qrImage, {\n    x: 50,\n    y: page2.getHeight() - 390,\n    width: 300,\n    height: 300,\n  })\n\n  const pdfBytes = await pdfDoc.save()\n\n  return new Blob([pdfBytes], { type: 'application/pdf' })\n}\n\nfunction getIdealFontSize (font, text, maxWidth, minSize, defaultSize) {\n  let currentSize = defaultSize\n  let textWidth = font.widthOfTextAtSize(text, defaultSize)\n\n  while (textWidth > maxWidth && currentSize > minSize) {\n    textWidth = font.widthOfTextAtSize(text, --currentSize)\n  }\n\n  return textWidth > maxWidth ? null : currentSize\n}\n","export default __webpack_public_path__ + \"static/media/certificate.cb910c87.pdf\";","import React, { useEffect } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport UserSelector from './UserSelector';\nimport ReasonSelector from './ReasonSelector';\nimport { downloadBlob } from '../js/dom-utils';\nimport { generatePdf } from '../js/pdf-util';\nimport { UserType, UserConfigType } from '../config/types';\nimport pdfBase from '../certificate.pdf';\n\nconst Form = () => {\n  const generate = async () => {\n    if (userData && userData.profile) {\n      const userProfile = userData.profile;\n      // set current date and hour\n      const now = new Date();\n      userProfile.datesortie = `${now.getDate()}/${now.getMonth() + 1}/${now.getFullYear()}`;\n      userProfile.heuresortie = `${now.getHours()}:${String(now.getMinutes()).padStart(2, '0')}`;\n      // generate pdf\n      const pdfBlob = await generatePdf(userProfile, reason, pdfBase);\n      const creationDate = now.toLocaleDateString('fr-CA');\n      const creationHour = now\n        .toLocaleTimeString('fr-FR', {\n          hour: '2-digit',\n          minute: '2-digit',\n        })\n        .replace(':', '-');\n        // download pdf\n      downloadBlob(pdfBlob, `attestation-${creationDate}_${creationHour}.pdf`);\n    } else {\n      // TODO handle error\n    }\n  }\n  const handleUserSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(e.target.value);\n  }\n  const handleReasonSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setReason(e.currentTarget.value);\n  }\n  const [user, setUser] = React.useState<string>('');\n  const [error, setError] = React.useState<string | null>(null);\n  const [reason, setReason] = React.useState<string>('');\n  const [userData, setUserData] = React.useState<UserType | null>(null);\n  const [userConfig, setUserConfig] = React.useState<UserConfigType | null>(null);\n\n  useEffect(() => {\n    const getDefaultUser = () => (\n      document.location.search.replace('?p=', '')\n        || (\n          (userConfig && userConfig.defaultUser && userConfig.users && userConfig.users[userConfig.defaultUser])\n            ? userConfig.defaultUser\n            : ''\n        )\n    )\n    if (userConfig) {\n      // update user data\n      if(user !== '') {\n        const userData: UserType = userConfig.users[user];\n        setUserData(userData);\n        if(userData && userData.settings && userData.settings.defaultChoice) {\n          setReason(userData.settings.defaultChoice);\n        } else {\n          setReason(userData.settings.choices[0]);\n        }\n      } else {\n        setUser(getDefaultUser());\n      }\n    }\n  }, [userConfig, user]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // load users config\n      await axios.get(`${document.location.origin}${document.location.pathname}/users.json`)\n        .then(function (response: AxiosResponse) {\n          setUserConfig(response.data);\n          setError(null);\n        })\n        .catch(function (error) {\n          setError('Une erreur s\\'est produite dans le chargement des données');\n          console.error(error);\n        });\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <form>\n      { error ? <div className=\"alert alert-danger\">{error}</div> : null}\n      <UserSelector\n        users={(userConfig && userConfig.users) ? userConfig.users : {}}\n        currentUser={user}\n        onChange={handleUserSelect}\n      />\n      <ReasonSelector currentReason={reason} reasons={(userData && userData.settings && userData.settings.choices) ? userData.settings.choices : null}\n        onChange={handleReasonSelect} />\n      <button type=\"button\" className=\"btn btn-info btn-lg btn-block\"\n        id=\"generate-btn\" onClick={generate}>\n          Générer\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from 'react';\n\nconst LegalMentions = () => {\n\n  return (\n    <p className=\"text-center\"><small>Ce projet a été réalisé à partir du projet officiel disponible sur le <a href=\"https://github.com/LAB-MI/attestation-deplacement-derogatoire-q4-2020\">dépôt du Minitère de l'Intérieur</a><br />Auteur : <a href=\"https://www.mariegosse.fr\">Marie Gossé</a> / <a href=\"https://github.com/kasty/covid19-auto-generator\">Github</a></small></p>\n  );\n}\n\nexport default LegalMentions;\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport './css/App.css';\n\nimport React from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport LegalMentions from './components/LegalMentions';\n\nfunction App() {\n  return (\n    <div id=\"app\" className=\"App container-md\">\n      <div className=\"mx-auto card\" id=\"main\">\n        <div className=\"card-body text-center\">\n          <Header />\n          <Form />\n        </div>\n      </div>\n      <LegalMentions />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}